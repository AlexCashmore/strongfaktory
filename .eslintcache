[{"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\index.js":"1","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\App.js":"2","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\reportWebVitals.js":"3","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\StrongFactory.tsx":"4","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\stores\\Stores.tsx":"5","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\stores\\generalStore.ts":"6","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\StrongSurvey.tsx":"7","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\daily.js":"8","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\chartwrapper.js":"9","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\Spinner.js":"10","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\search.js":"11","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\spinner.js":"12"},{"size":582,"mtime":1611116791751,"results":"13","hashOfConfig":"14"},{"size":472,"mtime":1611116827942,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":5738,"mtime":1611522927973,"results":"17","hashOfConfig":"14"},{"size":456,"mtime":1611209879610,"results":"18","hashOfConfig":"14"},{"size":922,"mtime":1611520711461,"results":"19","hashOfConfig":"14"},{"size":15923,"mtime":1611521130599,"results":"20","hashOfConfig":"14"},{"size":9673,"mtime":1611352200302,"results":"21","hashOfConfig":"14"},{"size":4286,"mtime":1611210659475,"results":"22","hashOfConfig":"14"},{"size":1547,"mtime":1611210400254,"results":"23","hashOfConfig":"14"},{"size":1388,"mtime":1611210516622,"results":"24","hashOfConfig":"14"},{"size":1547,"mtime":1611210400254,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"vbffxv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\index.js",[],["56","57"],"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\App.js",["58","59"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport {inject, observer} from \"mobx-react\";\nimport ObservedStrongFactory from \"./components/StrongFactory\";\n\n@inject('rootStore')@observer class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n\n    return (\n        <div className=\"App\">\n          <ObservedStrongFactory rootStore={this.props.rootStore}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\reportWebVitals.js",[],"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\StrongFactory.tsx",["60","61","62"],"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\stores\\Stores.tsx",["63","64","65","66"],"import {\r\n    action, configure, decorate, observable,\r\n} from 'mobx';\r\nimport generalStore from \"./generalStore\";\r\nimport {create} from \"mobx-persist\";\r\nconfigure({ enforceActions: 'observed' });\r\n\r\nconst hydrate = create({storage:localStorage,jsonify:true});\r\n\r\nexport class RootStore {\r\n    generalStore: generalStore;\r\n\r\n    constructor() {\r\n        this.generalStore = new generalStore(this);\r\n    }\r\n\r\n}\r\n\r\nexport const rootStore = new RootStore();\r\n",["67","68"],"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\stores\\generalStore.ts",["69"],"import { action, observable } from 'mobx';\r\nimport { rootStore } from './Stores';\r\nimport cookie from 'js-cookie';\r\n\r\n\r\nexport default class GeneralStore {\r\n    rootStore: any;\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @observable username = 'User'\r\n    @observable data = typeof cookie.get('data')!==\"undefined\"?JSON.parse(cookie.get('data')):[];\r\n    @observable nextGoal = typeof cookie.get('nextGoal')!==\"undefined\"?JSON.parse(cookie.get('nextGoal')):{};\r\n    @observable nextGoalInt = typeof cookie.get('next')!==\"undefined\"?JSON.parse(cookie.get('next')):{};\r\n\r\n    @action.bound setUsername(username){\r\n        this.username = username\r\n    }\r\n    @action.bound setData(data){\r\n        this.data = data\r\n    }\r\n    @action.bound setNextGoal(data){\r\n        this.nextGoal = data\r\n    }\r\n    @action.bound setNextGoalInt(data){\r\n        this.nextGoalInt = data\r\n    }\r\n\r\n\r\n\r\n}\r\n","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\StrongSurvey.tsx",["70","71","72","73","74","75"],"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\daily.js",["76","77","78","79","80","81","82","83","84","85","86","87"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport moment from \"moment\";\r\nimport {\r\n    Button, MenuItem, Position, Classes, Intent,\r\n} from \"@blueprintjs/core\";\r\nimport { MultiSelect, Select } from \"@blueprintjs/select\";\r\nimport { DateTime } from \"luxon\";\r\nimport Spinner from \"./spinner\";\r\nimport ChartWrapper from \"./chartwrapper\";\r\nimport Search from \"./search\";\r\n\r\nclass Daily extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartHandle = this.chartHandle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // fetch data\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            selectedLegend: [],\r\n            selectedOrganizations: [],\r\n            dataItems: [],\r\n            updated: false,\r\n            legendItems: [{\r\n                datasetIndex: 0,\r\n                fillStyle: \"#b16037\",\r\n                hidden: false,\r\n                lineCap: \"\",\r\n                lineDash: \"\",\r\n                lineDashOffset: \"\",\r\n                lineJoin: \"\",\r\n                lineWidth: 1,\r\n                pointStyle: \"\",\r\n                strokeStyle: \"#b16037\",\r\n                text: \"Organization1 Score3\",\r\n            }],\r\n        });\r\n    }\r\n\r\n    chartHandle(chart) {\r\n        const chartInstanceHandle = chart;\r\n        this.setState({\r\n            chartInstance: chartInstanceHandle,\r\n            legendItems: chartInstanceHandle.legend.legendItems,\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        const submitted=this.props.submitted\r\n        /* const clearButton =\r\n            this.state.selectedLegend.length > 0 ? <Button icon=\"cross\" minimal={true} onClick={this.handleClear} /> : undefined;*/\r\n        const shortTermChartColorStorage = [\r\n            \"#efd8ff\",\r\n        ];\r\n        if(true) {\r\n            const randHex = Math.floor(Math.random() * 16777215);\r\n            const color = `#${randHex.toString(16)}`;\r\n            const color2 = `#${Math.floor(randHex - 5000).toString(16)}`;\r\n            const color3 = `#${Math.floor(randHex - 8000).toString(16)}`;\r\n            const squatData= this.props.dataset.map((data)=>{return({x:data.timestamp,y:data.data.squat})});\r\n            const benchData= this.props.dataset.map((data)=>{return({x:data.timestamp,y:data.data.bench})});\r\n            const deadliftData= this.props.dataset.map((data)=>{return({x:data.timestamp,y:data.data.deadlift})});\r\n            const testData = this.props.dataset;\r\n            console.log('WHAT IS MY TEST DATA',testData,squatData,benchData,deadliftData);\r\n\r\n            const dataset2 = [\r\n                        {\r\n                            label: `Squat`,\r\n                            backgroundColor: color,\r\n                            borderColor: color,\r\n                            borderWidth: 1,\r\n                            hoverBackgroundColor: color,\r\n                            hoverBorderColor: color,\r\n                            fill: false,\r\n                            showLine: true,\r\n                            hidden: false,\r\n                            data:squatData\r\n                        },\r\n                        {\r\n                            label: `Bench`,\r\n                            backgroundColor: color2,\r\n                            borderColor: color2,\r\n                            borderWidth: 1,\r\n                            hoverBackgroundColor: color2,\r\n                            hoverBorderColor: color2,\r\n                            fill: false,\r\n                            showLine: true,\r\n                            hidden: false,\r\n                            data:benchData\r\n                        },\r\n                        {\r\n                            label: `Deadlift`,\r\n                            backgroundColor: color3,\r\n                            borderColor: color3,\r\n                            borderWidth: 1,\r\n                            hoverBackgroundColor: color3,\r\n                            hoverBorderColor: color3,\r\n                            fill: false,\r\n                            showLine: true,\r\n                            hidden: false,\r\n                            data:deadliftData\r\n                        }];\r\n            const chartConfig = {\r\n                labels: this.props.dataset.length>=1?[moment(this.props.dataset[0].timestamp).toISOString(),moment(this.props.dataset[this.props.dataset.length-1].timestamp).toISOString()]:[new Date().toISOString(),moment().add('30','day').toISOString()],\r\n                datasets: dataset2,\r\n            };\r\n\r\n            return (\r\n                <section style={{width:800,height:800}}>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"container\">\r\n                            <div style={{ margin: 15 }}>\r\n                                <ChartWrapper\r\n                                    chartHandle={this.chartHandle}\r\n                                    type=\"line\"\r\n                                    data={chartConfig}\r\n                                    options={{\r\n                                        animationTime: 0,\r\n                                        hoverMode: \"index\",\r\n                                        stacked: false,\r\n                                        legend: {\r\n                                            display: false,\r\n                                            position: \"bottom\",\r\n                                            /* labels: {\r\n                                                filter(item, chart) {\r\n                                                    // Logic to remove a particular legend item goes here\r\n                                                    return item.text.includes('TEST 2 Score1');\r\n                                                },\r\n                                            },*/\r\n                                        },\r\n                                        annotation: {\r\n                                            annotations: [\r\n\r\n                                            ],\r\n                                        },\r\n\r\n                                        tooltips: {\r\n                                            mode: \"nearest\",\r\n                                            intersect: true,\r\n                                            enabled: true,\r\n                                            callbacks: {\r\n                                                label(tooltipItems, data) {\r\n                                                    const averageDataSetIndex = tooltipItems.datasetIndex;\r\n                                                    console.log(data,tooltipItems);\r\n                                                    return `${data.datasets[tooltipItems.datasetIndex].label}: ${tooltipItems.yLabel} kg/lb `;\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                        scales: {\r\n\r\n                                            xAxes: [{\r\n                                                type: \"time\",\r\n                                                time: {\r\n                                                    unit: \"day\",\r\n                                                    displayFormats: {\r\n                                                        day: \"MMM D\",\r\n                                                    },\r\n                                                    tooltipFormat: \"MMM D\",\r\n                                                    display: true,\r\n                                                    ticks: {\r\n                                                        display: true,\r\n                                                        source: \"labels\",\r\n                                                    },\r\n                                                    scaleLabel: {\r\n                                                        display: true,\r\n                                                    },\r\n\r\n                                                },\r\n                                            }],\r\n                                            yAxes: [{\r\n                                                ticks: {\r\n                                                    stepSize: 1,\r\n                                                },\r\n                                                scaleLabel: {\r\n                                                    display: true,\r\n                                                    labelString: \"KG/LB\",\r\n                                                },\r\n                                            }],\r\n                                        },\r\n                                    }\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n            );\r\n        }\r\n        return (\r\n            <div style={{ marginTop: 30 }}>\r\n                <Spinner\r\n                    animated\r\n                    content={[\"Extracting information...\",\r\n                        \"Generating Chart...\", \"Aquiring Birthdays...\", \"Integrating Data Structures...\",\r\n                        \"Taking Temperatures...\", \"Inheriting Schematics...\", \"Rolling up data source...\", \"Drilling down...\"]\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDaily.propTypes = {};\r\nDaily.contextTypes = {\r\n    router: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default (Daily);","C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\chartwrapper.js",[],"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\Spinner.js",[],"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\search.js",[],"C:\\Users\\Alex\\WebstormProjects\\strfactory\\src\\components\\graph\\spinner.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":8,"column":3,"nodeType":"98","messageId":"99","endLine":10,"endColumn":4},{"ruleId":"100","severity":1,"message":"101","line":5,"column":9,"nodeType":"94","messageId":"95","endLine":5,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":34,"column":86,"nodeType":"104","endLine":34,"endColumn":139},{"ruleId":"102","severity":1,"message":"103","line":48,"column":26,"nodeType":"104","endLine":48,"endColumn":54},{"ruleId":"100","severity":1,"message":"105","line":2,"column":5,"nodeType":"94","messageId":"95","endLine":2,"endColumn":11},{"ruleId":"100","severity":1,"message":"106","line":2,"column":24,"nodeType":"94","messageId":"95","endLine":2,"endColumn":32},{"ruleId":"100","severity":1,"message":"107","line":2,"column":34,"nodeType":"94","messageId":"95","endLine":2,"endColumn":44},{"ruleId":"100","severity":1,"message":"108","line":8,"column":7,"nodeType":"94","messageId":"95","endLine":8,"endColumn":14},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"100","severity":1,"message":"109","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":19},{"ruleId":"100","severity":1,"message":"110","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":7,"column":9,"nodeType":"94","messageId":"95","endLine":7,"endColumn":13},{"ruleId":"100","severity":1,"message":"111","line":135,"column":19,"nodeType":"94","messageId":"95","endLine":135,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":308,"column":40,"nodeType":"114","messageId":"115","endLine":308,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":308,"column":65,"nodeType":"114","messageId":"115","endLine":308,"endColumn":67},{"ruleId":"112","severity":1,"message":"113","line":308,"column":93,"nodeType":"114","messageId":"115","endLine":308,"endColumn":95},{"ruleId":"92","severity":1,"message":"116","line":6,"column":5,"nodeType":"94","messageId":"95","endLine":6,"endColumn":11},{"ruleId":"92","severity":1,"message":"117","line":6,"column":13,"nodeType":"94","messageId":"95","endLine":6,"endColumn":21},{"ruleId":"92","severity":1,"message":"118","line":6,"column":23,"nodeType":"94","messageId":"95","endLine":6,"endColumn":31},{"ruleId":"92","severity":1,"message":"119","line":6,"column":33,"nodeType":"94","messageId":"95","endLine":6,"endColumn":40},{"ruleId":"92","severity":1,"message":"120","line":6,"column":42,"nodeType":"94","messageId":"95","endLine":6,"endColumn":48},{"ruleId":"92","severity":1,"message":"121","line":8,"column":10,"nodeType":"94","messageId":"95","endLine":8,"endColumn":21},{"ruleId":"92","severity":1,"message":"122","line":8,"column":23,"nodeType":"94","messageId":"95","endLine":8,"endColumn":29},{"ruleId":"92","severity":1,"message":"123","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":18},{"ruleId":"92","severity":1,"message":"124","line":12,"column":8,"nodeType":"94","messageId":"95","endLine":12,"endColumn":14},{"ruleId":"92","severity":1,"message":"125","line":57,"column":15,"nodeType":"94","messageId":"95","endLine":57,"endColumn":24},{"ruleId":"92","severity":1,"message":"126","line":60,"column":15,"nodeType":"94","messageId":"95","endLine":60,"endColumn":41},{"ruleId":"92","severity":1,"message":"127","line":151,"column":59,"nodeType":"94","messageId":"95","endLine":151,"endColumn":78},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","@typescript-eslint/no-unused-vars","'toJS' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'action' is defined but never used.","'decorate' is defined but never used.","'observable' is defined but never used.","'hydrate' is assigned a value but never used.","'rootStore' is defined but never used.","'LineGraph' is defined but never used.","'addDay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'MenuItem' is defined but never used.","'Position' is defined but never used.","'Classes' is defined but never used.","'Intent' is defined but never used.","'MultiSelect' is defined but never used.","'Select' is defined but never used.","'DateTime' is defined but never used.","'Search' is defined but never used.","'submitted' is assigned a value but never used.","'shortTermChartColorStorage' is assigned a value but never used.","'averageDataSetIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]